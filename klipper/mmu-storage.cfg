
[mcu stm32]
serial: /dev/serial/by-id/usb-1a86_USB_Serial-if00-port0
restart_method: command

[output_pin led]
pin: !stm32:PC13
pwm: True

[output_pin _PWM_SEL]
pin: stm32:PA3
pwm: True
cycle_time: 0.10
hardware_pwm: True

[output_pin _PWM_SPEED]
pin: stm32:PA2
pwm: True
cycle_time: 0.10
hardware_pwm: True

[output_pin _PWM_DELAY]
pin: stm32:PA1
pwm: True
cycle_time: 0.10
hardware_pwm: True

[output_pin _PWM_MANUAL]
pin: !stm32:PA5
pwm: True
cycle_time: 0.10
#hardware_pwm: True


########  ######## ##          ###    ##    ## 
##     ## ##       ##         ## ##    ##  ##  
##     ## ##       ##        ##   ##    ####   
########  ######   ##       ##     ##    ##    
##     ## ##       ##       #########    ##    
##     ## ##       ##       ##     ##    ##    
########  ######## ######## ##     ##    ##
[gcode_macro MMU_SETUP]
variable_PIN: 0
gcode:
    {% if 'PIN' in params %}
        {% set PIN = params.PIN|int %}
        SET_GCODE_VARIABLE MACRO=MMU_SETUP VARIABLE=pin VALUE={PIN}
        SET_PIN PIN=_PWM_SEL VALUE={(0.025 + PIN * 5) / 100}
        RESPOND MSG="MMU_SETUP PIN={PIN}"
    {% endif %}
    
    {% if 'SPEED' in params %}
        {% set SPEED = params.SPEED|float %}
        SET_PIN PIN=_PWM_SPEED VALUE={SPEED}
        RESPOND MSG="MMU_SETUP SPEED={SPEED}"
    {% endif %}
    
    {% if 'DELAY' in params %}
        {% set DELAY = params.DELAY|float %}
        SET_PIN PIN=_PWM_DELAY VALUE={DELAY / 4}
        M118 MMU_SETUP DELAY={DELAY}
        RESPOND MSG="MMU_SETUP DELAY={DELAY}"
    {% endif %}

[delayed_gcode _MMU_INITIALIZE]
initial_duration: 0.1
gcode:
    MMU_SETUP PIN=0 SPEED=1.0 DELAY=0.5


##     ##  #######  ##     ## ######## 
###   ### ##     ## ##     ## ##       
#### #### ##     ## ##     ## ##       
## ### ## ##     ## ##     ## ######   
##     ## ##     ##  ##   ##  ##       
##     ## ##     ##   ## ##   ##       
##     ##  #######     ###    ######## 

[gcode_macro MMU_MOVE_STOP]
gcode:
    SET_GCODE_VARIABLE MACRO=_MMU_LOAD2 VARIABLE=enable VALUE=0
    SET_PIN PIN=_PWM_MANUAL VALUE=0
    {% set PIN = printer["gcode_macro MMU_SETUP"].pin|int %}
    MMU_SETUP PIN={PIN - PIN % 2}
    
[gcode_macro MMU_MOVE]
gcode:
    {% if 'DIRECTION' in params %}
        {% set DIRECTION = params.DIRECTION|int %}
        {% set PIN = printer["gcode_macro MMU_SETUP"].pin|int %}
        {% set MOTOR = PIN - PIN % 2 %}
        {% if DIRECTION > 0 %}
            MMU_SETUP PIN={MOTOR}
        {% else %}
            MMU_SETUP PIN={MOTOR + 1}
        {% endif %}
    {% endif %}

    {% set SPEED = params.SPEED|default(1)|float %}
    SET_PIN PIN=_PWM_MANUAL VALUE={SPEED}

    {% if 'DURATION' in params %}
        {% set DURATION = params.DURATION|float %}
        UPDATE_DELAYED_GCODE ID=_MMU_MOVE_STOP DURATION={DURATION}
    {% endif %}

[delayed_gcode _MMU_MOVE_STOP]
gcode:
    MMU_MOVE_STOP


##        #######     ###    ########  
##       ##     ##   ## ##   ##     ## 
##       ##     ##  ##   ##  ##     ## 
##       ##     ## ##     ## ##     ## 
##       ##     ## ######### ##     ## 
##       ##     ## ##     ## ##     ## 
########  #######  ##     ## ########  

[gcode_macro MMU_LOAD]
gcode:
    _MMU_LOAD2 DIRECTION=1

[gcode_macro MMU_UNLOAD]
gcode:
    _MMU_LOAD2 DIRECTION=-1

[gcode_macro _MMU_LOAD2]
variable_ENABLE: 1
variable_DIRECTION: 1
gcode:
    {% set DIRECTION = params.DIRECTION|default(1)|int %}

    {% set min_extrude_temp = 0|float %}
    {% if 'min_extrude_temp' in printer.configfile.config["extruder"] %}
        {% set min_extrude_temp = printer.configfile.config["extruder"]["min_extrude_temp"]|float %}
    {% endif %}

    {% if printer.extruder.temperature < min_extrude_temp %}
        RESPOND Type=error MSG="Extrude below minimum temp"
    {% else %}
        SET_GCODE_VARIABLE MACRO=_MMU_LOAD2 VARIABLE=enable VALUE=1
        SET_GCODE_VARIABLE MACRO=_MMU_LOAD2 VARIABLE=direction VALUE={DIRECTION}
        M83 ; E Relative
        UPDATE_DELAYED_GCODE ID=_MMU_LOAD DURATION=.1
    {% endif %}

[delayed_gcode _MMU_LOAD]
gcode:
    {% set ENABLE = printer["gcode_macro _MMU_LOAD2"].enable|int %}
    {% set DIRECTION = printer["gcode_macro _MMU_LOAD2"].direction|int %}

    {% if ENABLE %}
        {% if DIRECTION > 0 %}
            ; LOAD
            G1 E100 F500
            MMU_MOVE SPEED=1
        {% else %}
            ; UNLOAD
            G1 E-100 F500
            MMU_MOVE SPEED=1
        {% endif %}
        UPDATE_DELAYED_GCODE ID=_MMU_LOAD DURATION=2
    {% endif %}


##     ## ########    ###    ######## ######## ########  
##     ## ##         ## ##      ##    ##       ##     ## 
##     ## ##        ##   ##     ##    ##       ##     ## 
######### ######   ##     ##    ##    ######   ########  
##     ## ##       #########    ##    ##       ##   ##   
##     ## ##       ##     ##    ##    ##       ##    ##  
##     ## ######## ##     ##    ##    ######## ##     ## 

# [mcu pico]
# serial: /dev/serial/by-id/usb-Klipper_rp2040_45503571290ACEF8-if00
# restart_method: command

# [heater_generic picoHeater]
# gcode_id: picoHeater
# heater_pin: pico:gpio21
# sensor_type: Generic 3950
# sensor_pin: pico:gpio26
# control: pid
# pid_Kp: 49.034 
# pid_Ki: 2.224 
# pid_Kd: 270.296
# min_temp: 0
# max_temp: 100

# [controller_fan picoFan]
# pin: pico:gpio23
# heater: picoHeater
# fan_speed: 1.0
# idle_timeout: 30
# idle_speed: 1.0